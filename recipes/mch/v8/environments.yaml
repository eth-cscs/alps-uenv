tools:
  compiler:
    - toolchain: gcc
      spec: gcc
  unify: when_possible
  # don't use system packages, in order to avoid concretization issues
  specs:
  - cmake@3.24
  - python@3.10
  - libtree
  - tree
  - ruby@3.1.0
  packages: []
  views:
    tools:
      exclude: []
prgenv-nvidia:
  compiler:
    - toolchain: gcc
      spec: gcc
    - toolchain: llvm
      spec: nvhpc
  unify: true
  mpi:
    spec: cray-mpich@8.1.30%nvhpc
    gpu: cuda
  # don't use system packages, in order to avoid concretization issues
  packages: []
  specs:
  - osu-micro-benchmarks@5.9%nvhpc
  - cuda@12.3
  - eccodes@2.36.4%nvhpc +tools +fortran +aec +openmp jp2k=jasper
  - netcdf-c@4.9.2%nvhpc +mpi
  - netcdf-fortran@4.6.1%nvhpc
  - hdf5%nvhpc +szip +hl +fortran +mpi
  - openblas@0.3.21%nvhpc
  - libfyaml
  # the following are explicitly set for backwards compatibility
  - cray-pals@1.2.12
  # explicitly add these for icon concretization
  - python@3.11.7
  - cmake@3.24
  - zlib-ng
  variants:
  - cuda_arch=80
  - +mpi
  - +cuda
prgenv-gcc:
  compiler:
    - toolchain: gcc
      spec: gcc
  unify: when_possible
  mpi:
    spec: cray-mpich@8.1.30%gcc
  # only use libx11 from the system, in order to avoid concretization issues
  packages: []
  packages:
  - libx11
  specs:
  - osu-micro-benchmarks@5.9
  - cmake@3.24
  - openblas@0.3.26
  - libfyaml@0.7.12
  - hdf5@1.12.2 +fortran +threadsafe ~mpi
  - hdf5@1.12.2 +fortran +threadsafe +mpi
  - netlib-scalapack@2.2.0
  - eccodes@2.36.4 +tools +fortran +aec +openmp jp2k=jasper
  - netcdf-c@4.8.1+mpi ^hdf5+mpi api=v18
  - netcdf-c@4.8.1~mpi ^hdf5~mpi api=v18
  - netcdf-fortran@4.5.4 ^netcdf-c+mpi
  - netcdf-fortran@4.5.4 ^netcdf-c~mpi
  - nco@5.0.1
  - cdo@2.0.5
  variants:
  - +mpi
  views:
    prgenv-gcc-serial:
      exclude:
      - hdf5+mpi
      - netcdf-c+mpi
      - netcdf-fortran ^netcdf-c+mpi
      link: roots
